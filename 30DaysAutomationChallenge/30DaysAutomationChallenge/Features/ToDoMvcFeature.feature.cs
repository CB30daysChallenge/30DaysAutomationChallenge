// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace _30DaysAutomationChallenge.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ToDoMvcFeature")]
    public partial class ToDoMvcFeatureFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ToDoMvcFeature.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ToDoMvcFeature", "\tIn order to create and view Active/Completed/All tasks in the ToDoMvc AngularJSp" +
                    "age\r\n\tAs a user\r\n\tI want to ensure the ToDOMVc page elements and task lists are " +
                    "displayed correctly", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify All Lists")]
        [NUnit.Framework.CategoryAttribute("All_Lists")]
        public virtual void VerifyAllLists()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify All Lists", new string[] {
                        "All_Lists"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tasks"});
            table1.AddRow(new string[] {
                        "Automation"});
            table1.AddRow(new string[] {
                        "Atlas"});
#line 10
testRunner.When("I Enter New tasks", ((string)(null)), table1, "When ");
#line 14
testRunner.And("I click on the checkbox of one of the tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
testRunner.And("I Click on the All", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
testRunner.Then("all entered tasks are displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Clear Complete Tasks")]
        [NUnit.Framework.CategoryAttribute("Clear_Completed_Task")]
        public virtual void VerifyClearCompleteTasks()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Clear Complete Tasks", new string[] {
                        "Clear_Completed_Task"});
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tasks"});
            table2.AddRow(new string[] {
                        "Betradar"});
            table2.AddRow(new string[] {
                        "Sporting Solutions"});
#line 21
testRunner.When("I Enter New tasks", ((string)(null)), table2, "When ");
#line 25
testRunner.And("I click on Checkbox of \'Betradar\' one of Acive tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
testRunner.And("I Click on the Complete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
testRunner.And("click on Checkbox of \'Betradar\'one of the Completed tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
testRunner.And("I Click on the ClearCompleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
testRunner.And("I Click on the All", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
testRunner.Then("only \'Sporting Solutions\' is Displayed  in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Completed Lists")]
        [NUnit.Framework.CategoryAttribute("Completed_List")]
        public virtual void VerifyCompletedLists()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Completed Lists", new string[] {
                        "Completed_List"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 35
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tasks"});
            table3.AddRow(new string[] {
                        "US Racing"});
            table3.AddRow(new string[] {
                        "Specflow"});
#line 36
testRunner.When("I Enter New tasks", ((string)(null)), table3, "When ");
#line 40
testRunner.And("I click on the checkbox of one of the tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
testRunner.And("I Click on the Complete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
testRunner.Then("all entered tasks are displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Active Lists")]
        [NUnit.Framework.CategoryAttribute("Active_List")]
        public virtual void VerifyActiveLists()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Active Lists", new string[] {
                        "Active_List"});
#line 45
this.ScenarioSetup(scenarioInfo);
#line 46
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tasks"});
            table4.AddRow(new string[] {
                        "30 days Challenge"});
            table4.AddRow(new string[] {
                        "Unit Tests"});
#line 47
testRunner.When("I Enter New tasks", ((string)(null)), table4, "When ");
#line 51
testRunner.And("I Click on the Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
testRunner.Then("all entered tasks are displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify New Tasks")]
        [NUnit.Framework.CategoryAttribute("New_Task")]
        public virtual void VerifyNewTasks()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify New Tasks", new string[] {
                        "New_Task"});
#line 55
this.ScenarioSetup(scenarioInfo);
#line 56
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tasks"});
            table5.AddRow(new string[] {
                        "SIS Greyhounds"});
            table5.AddRow(new string[] {
                        "SIS Throughbreds"});
#line 57
testRunner.When("I Enter New tasks", ((string)(null)), table5, "When ");
#line 61
testRunner.Then("all entered tasks are displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Completed List")]
        [NUnit.Framework.CategoryAttribute("Completed_List")]
        [NUnit.Framework.TestCaseAttribute("US Racing", null)]
        [NUnit.Framework.TestCaseAttribute("Specflow", null)]
        public virtual void VerifyCompletedList(string task, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Completed_List"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Completed List", @__tags);
#line 65
this.ScenarioSetup(scenarioInfo);
#line 66
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
testRunner.When(string.Format("I Enter a New {0}", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
testRunner.And("I press Enter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
testRunner.And(string.Format("I click on Checkbox of Acive {0}", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
testRunner.And("I Click on the Complete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
testRunner.Then(string.Format("the {0} is displayed on the Completed List", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Active List")]
        [NUnit.Framework.CategoryAttribute("Active_List")]
        [NUnit.Framework.TestCaseAttribute("30 days Challenge", null)]
        [NUnit.Framework.TestCaseAttribute("Unit Tests", null)]
        public virtual void VerifyActiveList(string task, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Active_List"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Active List", @__tags);
#line 79
this.ScenarioSetup(scenarioInfo);
#line 80
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
testRunner.When(string.Format("I Enter a New {0}", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
testRunner.And("I press Enter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
testRunner.And("I Click on the Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
testRunner.Then(string.Format("active{0} are displayed", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify New Task")]
        [NUnit.Framework.CategoryAttribute("New_Task")]
        [NUnit.Framework.TestCaseAttribute("30 days Challenge", null)]
        public virtual void VerifyNewTask(string task, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "New_Task"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify New Task", @__tags);
#line 93
this.ScenarioSetup(scenarioInfo);
#line 94
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 95
testRunner.When(string.Format("I Enter a New {0}", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 96
testRunner.And("I press Enter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
testRunner.Then(string.Format("the new {0} is populated on the List", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Complete Task")]
        [NUnit.Framework.CategoryAttribute("Complete_Task")]
        [NUnit.Framework.TestCaseAttribute("Unit Tests", null)]
        public virtual void VerifyCompleteTask(string task, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Complete_Task"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Complete Task", @__tags);
#line 104
this.ScenarioSetup(scenarioInfo);
#line 105
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 106
testRunner.When(string.Format("I Enter a New {0}", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
testRunner.And("I press Enter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
testRunner.And(string.Format("I click on Checkbox of Acive {0}", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
testRunner.And("I Click on the Complete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
testRunner.Then(string.Format("the {0} is displayed on the Completed List", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Clear Complete Task")]
        [NUnit.Framework.CategoryAttribute("Clear_Completed_Task")]
        [NUnit.Framework.TestCaseAttribute("Meetups", "Challenge", null)]
        public virtual void VerifyClearCompleteTask(string task1, string task2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Clear_Completed_Task"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Clear Complete Task", @__tags);
#line 117
this.ScenarioSetup(scenarioInfo);
#line 118
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 119
testRunner.When(string.Format("I Enter a New {0}", task1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 120
testRunner.And("I press Enter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
testRunner.And(string.Format("I Enter a New {0}", task2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
testRunner.And("I press Enter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
testRunner.And(string.Format("I click on Checkbox of Acive {0}", task1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
testRunner.And("I Click on the Complete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
testRunner.And(string.Format("click on Completed {0}", task1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
testRunner.Then(string.Format("only {0} is Displayed", task2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 127
testRunner.And(string.Format("{0} is not Displayed", task1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
