// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace _30DaysAutomationChallenge.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("ToDoMvcFeature", Description="\tIn order to create and view Active/Completed/All tasks in the ToDoMvc AngularJSp" +
        "age\r\n\tAs a user\r\n\tI want to ensure the ToDOMVc page elements and task lists are " +
        "displayed correctly", SourceFile="Features\\ToDoMvcFeature.feature", SourceLine=0)]
    public partial class ToDoMvcFeatureFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ToDoMvcFeature.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ToDoMvcFeature", "\tIn order to create and view Active/Completed/All tasks in the ToDoMvc AngularJSp" +
                    "age\r\n\tAs a user\r\n\tI want to ensure the ToDOMVc page elements and task lists are " +
                    "displayed correctly", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify All Lists", new string[] {
                "Browser:Chrome",
                "Browser:Firefox",
                "All_Lists"}, SourceLine=8)]
        public virtual void VerifyAllLists()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify All Lists", new string[] {
                        "Browser:Chrome",
                        "Browser:Firefox",
                        "All_Lists"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 10
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tasks"});
            table1.AddRow(new string[] {
                        "Automation"});
            table1.AddRow(new string[] {
                        "Atlas"});
#line 11
testRunner.When("I Enter New tasks", ((string)(null)), table1, "When ");
#line 15
testRunner.And("I click on the checkbox of one of the tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
testRunner.And("I Click on the All", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
testRunner.Then("all entered tasks are displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify Clear Complete Tasks", new string[] {
                "Clear_Completed_Task"}, SourceLine=19)]
        public virtual void VerifyClearCompleteTasks()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Clear Complete Tasks", new string[] {
                        "Clear_Completed_Task"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tasks"});
            table2.AddRow(new string[] {
                        "Betradar"});
            table2.AddRow(new string[] {
                        "Sporting Solutions"});
#line 22
testRunner.When("I Enter New tasks", ((string)(null)), table2, "When ");
#line 26
testRunner.And("I click on Checkbox of \'Betradar\' one of Acive tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
testRunner.And("I Click on the Complete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
testRunner.And("click on Checkbox of \'Betradar\'one of the Completed tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
testRunner.And("I Click on the ClearCompleted", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
testRunner.And("I Click on the All", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
testRunner.Then("only \'Sporting Solutions\' is Displayed  in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify Completed Lists", new string[] {
                "Completed_List"}, SourceLine=34)]
        public virtual void VerifyCompletedLists()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Completed Lists", new string[] {
                        "Completed_List"});
#line 35
this.ScenarioSetup(scenarioInfo);
#line 36
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tasks"});
            table3.AddRow(new string[] {
                        "US Racing"});
            table3.AddRow(new string[] {
                        "Specflow"});
#line 37
testRunner.When("I Enter New tasks", ((string)(null)), table3, "When ");
#line 41
testRunner.And("I click on the checkbox of one of the tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
testRunner.And("I Click on the Complete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
testRunner.Then("all entered tasks are displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify Active Lists", new string[] {
                "Browser_Chrome"}, SourceLine=47)]
        public virtual void VerifyActiveLists()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Active Lists", new string[] {
                        "Browser_Chrome"});
#line 48
this.ScenarioSetup(scenarioInfo);
#line 49
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tasks"});
            table4.AddRow(new string[] {
                        "30 days Challenge"});
            table4.AddRow(new string[] {
                        "Unit Tests"});
#line 50
testRunner.When("I Enter New tasks", ((string)(null)), table4, "When ");
#line 54
testRunner.And("I Click on the Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
testRunner.Then("all entered tasks are displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify New Tasks", new string[] {
                "Browser_Chrome"}, SourceLine=59)]
        public virtual void VerifyNewTasks()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify New Tasks", new string[] {
                        "Browser_Chrome"});
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tasks"});
            table5.AddRow(new string[] {
                        "SIS Greyhounds"});
            table5.AddRow(new string[] {
                        "SIS Throughbreds"});
#line 62
testRunner.When("I Enter New tasks", ((string)(null)), table5, "When ");
#line 66
testRunner.Then("all entered tasks are displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void VerifyCompletedList(string task, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Completed_List"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Completed List", @__tags);
#line 84
this.ScenarioSetup(scenarioInfo);
#line 85
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 86
testRunner.When(string.Format("I Enter a New {0}", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
testRunner.And("I press Enter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
testRunner.And(string.Format("I click on Checkbox of Acive {0}", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
testRunner.And("I Click on the Complete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
testRunner.Then(string.Format("the {0} is displayed on the Completed List", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify Completed List, US Racing", new string[] {
                "Completed_List"}, SourceLine=93)]
        public virtual void VerifyCompletedList_USRacing()
        {
#line 84
this.VerifyCompletedList("US Racing", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify Completed List, Specflow", new string[] {
                "Completed_List"}, SourceLine=93)]
        public virtual void VerifyCompletedList_Specflow()
        {
#line 84
this.VerifyCompletedList("Specflow", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyActiveList(string task, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Active_List"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Active List", @__tags);
#line 98
this.ScenarioSetup(scenarioInfo);
#line 99
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 100
testRunner.When(string.Format("I Enter a New {0}", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 101
testRunner.And("I press Enter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
testRunner.And("I Click on the Active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
testRunner.Then(string.Format("active{0} are displayed", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify Active List, 30 days Challenge", new string[] {
                "Active_List"}, SourceLine=106)]
        public virtual void VerifyActiveList_30DaysChallenge()
        {
#line 98
this.VerifyActiveList("30 days Challenge", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify Active List, Unit Tests", new string[] {
                "Active_List"}, SourceLine=106)]
        public virtual void VerifyActiveList_UnitTests()
        {
#line 98
this.VerifyActiveList("Unit Tests", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyNewTask(string task, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "New_Task"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify New Task", @__tags);
#line 112
this.ScenarioSetup(scenarioInfo);
#line 113
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 114
testRunner.When(string.Format("I Enter a New {0}", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 115
testRunner.And("I press Enter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
testRunner.Then(string.Format("the new {0} is populated on the List", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify New Task, 30 days Challenge", new string[] {
                "New_Task"}, SourceLine=119)]
        public virtual void VerifyNewTask_30DaysChallenge()
        {
#line 112
this.VerifyNewTask("30 days Challenge", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyCompleteTask(string task, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Complete_Task"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Complete Task", @__tags);
#line 123
this.ScenarioSetup(scenarioInfo);
#line 124
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 125
testRunner.When(string.Format("I Enter a New {0}", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 126
testRunner.And("I press Enter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
testRunner.And(string.Format("I click on Checkbox of Acive {0}", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
testRunner.And("I Click on the Complete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
testRunner.Then(string.Format("the {0} is displayed on the Completed List", task), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify Complete Task, Unit Tests", new string[] {
                "Complete_Task"}, SourceLine=132)]
        public virtual void VerifyCompleteTask_UnitTests()
        {
#line 123
this.VerifyCompleteTask("Unit Tests", ((string[])(null)));
#line hidden
        }
        
        public virtual void VerifyClearCompleteTask(string task1, string task2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Clear_Completed_Task"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Clear Complete Task", @__tags);
#line 136
this.ScenarioSetup(scenarioInfo);
#line 137
testRunner.Given("I am on the ToDoMvc AngularJS Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 138
testRunner.When(string.Format("I Enter a New {0}", task1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 139
testRunner.And("I press Enter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
testRunner.And(string.Format("I Enter a New {0}", task2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
testRunner.And("I press Enter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
testRunner.And(string.Format("I click on Checkbox of Acive {0}", task1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
testRunner.And("I Click on the Complete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
testRunner.And(string.Format("click on Completed {0}", task1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
testRunner.Then(string.Format("only {0} is Displayed", task2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 146
testRunner.And(string.Format("{0} is not Displayed", task1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify Clear Complete Task, Meetups", new string[] {
                "Clear_Completed_Task"}, SourceLine=149)]
        public virtual void VerifyClearCompleteTask_Meetups()
        {
#line 136
this.VerifyClearCompleteTask("Meetups", "Challenge", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
